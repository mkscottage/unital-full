# Generated by Django 2.1.7 on 2019-04-21 16:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(blank=True, choices=[('student', 'Student'), ('faculty', 'Faculty'), ('admin', 'Admin'), ('guest', 'Guest')], max_length=30, null=True, verbose_name='user type')),
                ('father_name', models.CharField(blank=True, max_length=50, null=True, verbose_name="Farther's Name")),
                ('graduation_programme', models.CharField(blank=True, choices=[('B.Sc.', 'B.Sc.'), ('B.Com.', 'B.Com.')], max_length=50, null=True, verbose_name='Graduation Programme')),
                ('session', models.IntegerField(blank=True, choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019)], default=main_app.models.User.current_year, null=True, verbose_name='Session start year')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('phone_no', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('profile_pic', models.ImageField(default='defaults/profile_pic.gif', upload_to=main_app.models.profile_pic_path, verbose_name='Profile Picture')),
            ],
            options={
                'verbose_name_plural': '3. Users',
            },
            bases=(models.Model, main_app.models.Choices),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_name', models.CharField(max_length=100, verbose_name='Name')),
                ('clg_u_name', models.CharField(max_length=100, unique=True, verbose_name='username')),
                ('desc', models.TextField(verbose_name='Description')),
                ('logo', models.ImageField(default='college/logo_default.png', upload_to='college/<django.db.models.fields.CharField>/logo/', verbose_name='logo')),
                ('clg_pic', models.ImageField(default='defaults/college_home_pic.jpeg', upload_to='college_list/home_pics/', verbose_name='College Picture')),
            ],
            options={
                'verbose_name_plural': '1. Colleges',
            },
        ),
        migrations.CreateModel(
            name='CollegeNotice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('body', models.TextField()),
                ('link', models.URLField(blank=True, null=True)),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Published On')),
                ('expiry_date', models.DateField(default=main_app.models.CollegeNotice.thirty_day_hence, verbose_name='Expiry Date')),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notice', to='main_app.College')),
            ],
            options={
                'verbose_name_plural': '6. College Notice Board',
            },
        ),
        migrations.CreateModel(
            name='CollegePictures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pic', models.ImageField(upload_to=main_app.models.college_pic_path)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='main_app.College')),
            ],
            options={
                'verbose_name_plural': '5. College Pictures',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('Computer Application', 'Computer Application'), ('Information Technology', 'Information Technology')], max_length=50, null=True, verbose_name='Department')),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department', to='main_app.College', verbose_name='College')),
            ],
            options={
                'verbose_name_plural': '2. Departments',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructions', models.TextField()),
                ('organisor', models.ForeignKey(limit_choices_to={'user_type': 'faculty'}, on_delete=django.db.models.deletion.CASCADE, related_name='exam', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Exam',
                'verbose_name_plural': 'Exam',
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.FileField(upload_to=main_app.models.notes_path, verbose_name='Notes')),
                ('uploaded_on', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded On')),
            ],
            options={
                'verbose_name_plural': 'Notes',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('body', models.TextField()),
                ('link', models.URLField(blank=True, null=True)),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Published On')),
                ('expiry_date', models.DateField(default=main_app.models.Notice.thirty_day_hence, verbose_name='Expiry Date')),
            ],
            options={
                'verbose_name_plural': '4. Unital Notice',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.IntegerField(choices=[('0', 'All'), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default='1', verbose_name='Semester')),
                ('name', models.CharField(max_length=50, verbose_name='Subject Name')),
                ('college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject', to='main_app.College', verbose_name='College')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject', to='main_app.Department', verbose_name='Department')),
            ],
            options={
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.IntegerField(choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019)], default=main_app.models.Syllabus.current_year, verbose_name='Session start year')),
                ('syllabus', models.FileField(upload_to=main_app.models.syllabus_path, verbose_name='Syllabus')),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='syllabus', to='main_app.College', verbose_name='College')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='syllabus', to='main_app.Department', verbose_name='Department')),
            ],
            options={
                'verbose_name_plural': '7. Syllabus',
            },
        ),
        migrations.AddField(
            model_name='notes',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='main_app.Subject', verbose_name='Subject'),
        ),
        migrations.AddField(
            model_name='notes',
            name='uploaded_by',
            field=models.ForeignKey(limit_choices_to={'user_type': 'faculty'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Uploaded By'),
        ),
        migrations.AddField(
            model_name='collegenotice',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.Department', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='collegenotice',
            name='pub_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Published By'),
        ),
        migrations.AddField(
            model_name='user',
            name='college',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='main_app.College'),
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department', to='main_app.Department', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
